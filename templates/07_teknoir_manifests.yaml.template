
---
apiVersion: node.k8s.io/v1
kind: RuntimeClass
metadata:
  name: nvidia
handler: nvidia

---
apiVersion: v1
kind: Secret
metadata:
  name: artifact-registry-secret
  namespace: kube-system
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: "${_AR_DOCKER_SECRET}"

---
apiVersion: v1
kind: Secret
metadata:
  name: artifact-registry-secret
  namespace: default
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: "${_AR_DOCKER_SECRET}"

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: default
imagePullSecrets:
- name: artifact-registry-secret

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: kube-system
imagePullSecrets:
- name: artifact-registry-secret

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: high-priority-toe
  namespace: kube-system
value: 1000000000
globalDefault: false
description: "This priority class should be used for toe service pods only."

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: toe
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: toe
  template:
    metadata:
      labels:
        app: toe
    spec:
      priorityClassName: high-priority-toe
      serviceAccountName: toe
      containers:
        - name: toe
          image: gcr.io/teknoir/toe:latest
          imagePullPolicy: Always
          env:
            - name: TOE_PROJECT
              value: "${_GCP_PROJECT}"
            - name: TOE_IOT_REGISTRY
              value: "${_IOT_REGISTRY}"
            - name: TOE_DEVICE
              value: "${_DEVICE_ID}"
            - name: TOE_CA_CERT
              value: "/etc/teknoir/roots.pem"
             - name: TOE_PRIVATE_KEY
              value: "/etc/teknoir/rsa_private.pem"
          volumeMounts:
            - name: toe-volume
              mountPath: "/etc/teknoir"
      volumes:
        - name: toe-volume
          hostPath:
            # directory location on host
            path: "/etc/teknoir"

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: high-priority-mqtt
  namespace: kube-system
value: 900000000
globalDefault: false
description: "This priority class should be used for mqtt service pods only."

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mqtt
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mqtt
  template:
    metadata:
      labels:
        app: mqtt
    spec:
      priorityClassName: high-priority-mqtt
      initContainers:
        - name: init
          image: busybox:1.28
          command: ['sh', '-c', 'echo>/mosquitto/shadow/passwd']
          volumeMounts:
            - name: shadow-volume
              mountPath: "/mosquitto/shadow"
      containers:
        - name: mqtt
          image: eclipse-mosquitto:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 1883
          volumeMounts:
            - name: data-volume
              mountPath: "/mosquitto/data"
            - name: config-volume
              mountPath: "/mosquitto/config"
            - name: shadow-volume
              mountPath: "/mosquitto/shadow"
      volumes:
        - name: data-volume
          hostPath:
            path: "/mosquitto/data"
        - name: config-volume
          configMap:
            name: mqtt-config
        - name: shadow-volume
          hostPath:
            path: "/mosquitto/shadow"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mqtt-config
  namespace: kube-system
data:
  mosquitto.conf: |
    listener 1883
    protocol mqtt
    allow_anonymous true
    persistence true
    persistence_location /mosquitto/data
    persistent_client_expiration 2m
    password_file /mosquitto/shadow/passwd
    log_dest stdout
    log_timestamp true
    log_timestamp_format %Y-%m-%dT%H:%M:%S
    log_type error
    log_type warning
    log_type notice
    log_type information
    log_type subscribe
    log_type unsubscribe

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: toe
  namespace: kube-system
imagePullSecrets:
- name: artifact-registry-secret

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: toe
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: toe
    namespace: kube-system

---
apiVersion: v1
kind: Service
metadata:
  name: mqtt
  namespace: kube-system
spec:
  selector:
    app: mqtt
  ports:
    - protocol: TCP
      port: 1883
      targetPort: 1883

---
apiVersion: v1
kind: Service
metadata:
  name: mqtt-localhost
  namespace: kube-system
spec:
  type: NodePort
  ports:
    - nodePort: 31883
      port: 1883
      protocol: TCP
      targetPort: 1883
  selector:
    app: mqtt